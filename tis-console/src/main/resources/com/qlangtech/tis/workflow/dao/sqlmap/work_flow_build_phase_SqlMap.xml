<?xml version="1.0" encoding="UTF-8" ?>
<!--~
  ~   Licensed to the Apache Software Foundation (ASF) under one
  ~   or more contributor license agreements.  See the NOTICE file
  ~   distributed with this work for additional information
  ~   regarding copyright ownership.  The ASF licenses this file
  ~   to you under the Apache License, Version 2.0 (the
  ~   "License"); you may not use this file except in compliance
  ~   with the License.  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  -->

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="work_flow_build_phase" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.qlangtech.tis.workflow.pojo.WorkFlowBuildPhase" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="work_flow_build_history_id" property="workFlowBuildHistoryId" jdbcType="INTEGER" />
    <result column="phase" property="phase" jdbcType="TINYINT" />
    <result column="result" property="result" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="op_time" property="opTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ibatorgenerated_ResultMapWithBLOBs" class="com.qlangtech.tis.workflow.pojo.WorkFlowBuildPhase" extends="work_flow_build_phase.ibatorgenerated_BaseResultMap" >
    <result column="phase_info" property="phaseInfo" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExampleWithBLOBs" resultMap="ibatorgenerated_ResultMapWithBLOBs" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildPhaseCriteria" >
    select id, work_flow_build_history_id, phase, result, create_time, op_time, phase_info
    from work_flow_build_phase
    <isParameterPresent >
      <include refid="work_flow_build_phase.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildPhaseCriteria" >
    select aa.id, work_flow_build_history_id, phase, result, create_time, op_time
     from ( select id from work_flow_build_phase
    <isParameterPresent >
      <include refid="work_flow_build_phase.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
      $paginationScript$
    </isParameterPresent>
       ) bb inner join work_flow_build_phase aa on aa.id=bb.id
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_ResultMapWithBLOBs" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildPhase" >
    select id, work_flow_build_history_id, phase, result, create_time, op_time, phase_info
    from work_flow_build_phase
    where id = #id:INTEGER#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildPhase" >
    delete from work_flow_build_phase
    where id = #id:INTEGER#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildPhaseCriteria" >
    delete from work_flow_build_phase
    <include refid="work_flow_build_phase.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildPhase" >
    insert into work_flow_build_phase (id, work_flow_build_history_id, phase, result, create_time,
      op_time, phase_info)
    values (#id:INTEGER#, #workFlowBuildHistoryId:INTEGER#, #phase:TINYINT#, #result:BIT#,
      #createTime:TIMESTAMP#, #opTime:TIMESTAMP#, #phaseInfo:LONGVARCHAR#)


  </insert>
  <insert id="ibatorgenerated_insertSelective" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildPhase" >
    insert into work_flow_build_phase
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="workFlowBuildHistoryId" >
        work_flow_build_history_id
      </isNotNull>
      <isNotNull prepend="," property="phase" >
        phase
      </isNotNull>
      <isNotNull prepend="," property="result" >
        result
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        create_time
      </isNotNull>
      <isNotNull prepend="," property="opTime" >
        op_time
      </isNotNull>
      <isNotNull prepend="," property="phaseInfo" >
        phase_info
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="workFlowBuildHistoryId" >
        #workFlowBuildHistoryId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="phase" >
        #phase:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="result" >
        #result:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        #createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="opTime" >
        #opTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="phaseInfo" >
        #phaseInfo:LONGVARCHAR#
      </isNotNull>
      )
    </dynamic>



  </insert>
  <select id="ibatorgenerated_countByExample" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildPhaseCriteria" resultClass="java.lang.Integer" >
    select count(*) from work_flow_build_phase
    <include refid="work_flow_build_phase.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update work_flow_build_phase
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        id = #record.id:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.workFlowBuildHistoryId" >
        work_flow_build_history_id = #record.workFlowBuildHistoryId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.phase" >
        phase = #record.phase:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.result" >
        result = #record.result:BIT#
      </isNotNull>
      <isNotNull prepend="," property="record.createTime" >
        create_time = #record.createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.opTime" >
        op_time = #record.opTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.phaseInfo" >
        phase_info = #record.phaseInfo:LONGVARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="work_flow_build_phase.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExampleWithBLOBs" >
    update work_flow_build_phase
    set id = #record.id:INTEGER#,
      work_flow_build_history_id = #record.workFlowBuildHistoryId:INTEGER#,
      phase = #record.phase:TINYINT#,
      result = #record.result:BIT#,
      create_time = #record.createTime:TIMESTAMP#,
      op_time = #record.opTime:TIMESTAMP#,
      phase_info = #record.phaseInfo:LONGVARCHAR#
    <isParameterPresent >
      <include refid="work_flow_build_phase.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update work_flow_build_phase
    set id = #record.id:INTEGER#,
      work_flow_build_history_id = #record.workFlowBuildHistoryId:INTEGER#,
      phase = #record.phase:TINYINT#,
      result = #record.result:BIT#,
      create_time = #record.createTime:TIMESTAMP#,
      op_time = #record.opTime:TIMESTAMP#
    <isParameterPresent >
      <include refid="work_flow_build_phase.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
</sqlMap>
