<?xml version="1.0" encoding="UTF-8" ?>
<!--~
  ~   Licensed to the Apache Software Foundation (ASF) under one
  ~   or more contributor license agreements.  See the NOTICE file
  ~   distributed with this work for additional information
  ~   regarding copyright ownership.  The ASF licenses this file
  ~   to you under the Apache License, Version 2.0 (the
  ~   "License"); you may not use this file except in compliance
  ~   with the License.  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  -->

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="work_flow_build_history" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.qlangtech.tis.workflow.pojo.WorkFlowBuildHistory" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="trigger_type" property="triggerType" jdbcType="BIT" />
    <result column="op_user_id" property="opUserId" jdbcType="INTEGER" />
    <result column="op_user_name" property="opUserName" jdbcType="VARCHAR" />
    <result column="app_id" property="appId" jdbcType="INTEGER" />
    <result column="app_name" property="appName" jdbcType="VARCHAR" />
    <result column="start_phase" property="startPhase" jdbcType="TINYINT" />
    <result column="history_id" property="historyId" jdbcType="INTEGER" />
    <result column="work_flow_id" property="workFlowId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="op_time" property="opTime" jdbcType="TIMESTAMP" />
    <result column="end_phase" property="endPhase" jdbcType="TINYINT" />



  </resultMap>

  <resultMap id="ibatorgenerated_ResultMapWithBLOBs" class="com.qlangtech.tis.workflow.pojo.WorkFlowBuildHistory" extends="work_flow_build_history.ibatorgenerated_BaseResultMap" >
    <result column="last_ver" property="lastVer" jdbcType="SMALLINT" />
    <result column="asyn_sub_task_status" property="asynSubTaskStatus" jdbcType="LONGVARCHAR" />
  </resultMap>

  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildHistoryCriteria" >
    select aa.id, start_time, end_time, state, trigger_type, op_user_id, op_user_name, app_id,
      app_name, start_phase, history_id, work_flow_id, create_time, op_time, end_phase
     from ( select id from work_flow_build_history
    <isParameterPresent >
      <include refid="work_flow_build_history.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
      $paginationScript$
    </isParameterPresent>
       ) bb inner join work_flow_build_history aa on aa.id=bb.id
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_ResultMapWithBLOBs" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildHistory" >
    select id, start_time, end_time, state, trigger_type, op_user_id, op_user_name, app_id,
      app_name, start_phase, history_id, work_flow_id, create_time, op_time, end_phase, last_ver, asyn_sub_task_status
    from work_flow_build_history
    where id = #id:INTEGER#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildHistory" >
    delete from work_flow_build_history
    where id = #id:INTEGER#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildHistoryCriteria" >
    delete from work_flow_build_history
    <include refid="work_flow_build_history.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildHistory" >
    insert into work_flow_build_history (id, start_time, end_time, state, trigger_type, op_user_id,
      op_user_name, app_id, app_name, start_phase, history_id, work_flow_id, create_time, op_time,
      end_phase)
    values (#id:INTEGER#, #startTime:TIMESTAMP#, #endTime:TIMESTAMP#, #state:TINYINT#,
      #triggerType:BIT#, #opUserId:INTEGER#, #opUserName:VARCHAR#, #appId:INTEGER#,
      #appName:VARCHAR#, #startPhase:TINYINT#, #historyId:INTEGER#, #workFlowId:INTEGER#,
      #createTime:TIMESTAMP#, #opTime:TIMESTAMP#, #endPhase:TINYINT#)

  </insert>
  <insert id="ibatorgenerated_insertSelective" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildHistory" >
    insert into work_flow_build_history
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="startTime" >
        start_time
      </isNotNull>
      <isNotNull prepend="," property="endTime" >
        end_time
      </isNotNull>
      <isNotNull prepend="," property="state" >
        state
      </isNotNull>
      <isNotNull prepend="," property="triggerType" >
        trigger_type
      </isNotNull>
      <isNotNull prepend="," property="opUserId" >
        op_user_id
      </isNotNull>
      <isNotNull prepend="," property="opUserName" >
        op_user_name
      </isNotNull>
      <isNotNull prepend="," property="appId" >
        app_id
      </isNotNull>
      <isNotNull prepend="," property="appName" >
        app_name
      </isNotNull>
      <isNotNull prepend="," property="startPhase" >
        start_phase
      </isNotNull>
      <isNotNull prepend="," property="historyId" >
        history_id
      </isNotNull>
      <isNotNull prepend="," property="workFlowId" >
        work_flow_id
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        create_time
      </isNotNull>
      <isNotNull prepend="," property="opTime" >
        op_time
      </isNotNull>
      <isNotNull prepend="," property="endPhase" >
        end_phase
      </isNotNull>
      <isNotNull prepend="," property="lastVer" >
        last_ver
      </isNotNull>
      <isNotNull prepend="," property="asynSubTaskStatus" >
        asyn_sub_task_status
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="startTime" >
        #startTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="endTime" >
        #endTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="state" >
        #state:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="triggerType" >
        #triggerType:BIT#
      </isNotNull>
      <isNotNull prepend="," property="opUserId" >
        #opUserId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="opUserName" >
        #opUserName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="appId" >
        #appId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="appName" >
        #appName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="startPhase" >
        #startPhase:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="historyId" >
        #historyId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="workFlowId" >
        #workFlowId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        #createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="opTime" >
        #opTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="endPhase" >
        #endPhase:TINYINT#
      </isNotNull>

      <isNotNull prepend="," property="lastVer" >
        #lastVer:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="asynSubTaskStatus" >
        #asynSubTaskStatus:LONGVARCHAR#
      </isNotNull>

      )
    </dynamic>

  </insert>
  <select id="ibatorgenerated_countByExample" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowBuildHistoryCriteria" resultClass="java.lang.Integer" >
    select count(*) from work_flow_build_history
    <include refid="work_flow_build_history.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update work_flow_build_history
    <dynamic prepend="set" >
      last_ver=last_ver+1,
      <isNotNull prepend="," property="record.id" >
        id = #record.id:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.startTime" >
        start_time = #record.startTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.endTime" >
        end_time = #record.endTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.state" >
        state = #record.state:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.triggerType" >
        trigger_type = #record.triggerType:BIT#
      </isNotNull>
      <isNotNull prepend="," property="record.opUserId" >
        op_user_id = #record.opUserId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.opUserName" >
        op_user_name = #record.opUserName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.appId" >
        app_id = #record.appId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.appName" >
        app_name = #record.appName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.startPhase" >
        start_phase = #record.startPhase:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.historyId" >
        history_id = #record.historyId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.workFlowId" >
        work_flow_id = #record.workFlowId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.createTime" >
        create_time = #record.createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.opTime" >
        op_time = #record.opTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.endPhase" >
        end_phase = #record.endPhase:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.asynSubTaskStatus" >
        asyn_sub_task_status = #record.asynSubTaskStatus:LONGVARCHAR#
      </isNotNull>

    </dynamic>
    <isParameterPresent >
      <include refid="work_flow_build_history.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update work_flow_build_history
    set id = #record.id:INTEGER#,
      start_time = #record.startTime:TIMESTAMP#,
      end_time = #record.endTime:TIMESTAMP#,
      state = #record.state:TINYINT#,
      trigger_type = #record.triggerType:BIT#,
      op_user_id = #record.opUserId:INTEGER#,
      op_user_name = #record.opUserName:VARCHAR#,
      app_id = #record.appId:INTEGER#,
      app_name = #record.appName:VARCHAR#,
      start_phase = #record.startPhase:TINYINT#,
      history_id = #record.historyId:INTEGER#,
      work_flow_id = #record.workFlowId:INTEGER#,
      create_time = #record.createTime:TIMESTAMP#,
      op_time = #record.opTime:TIMESTAMP#,
      end_phase = #record.endPhase:TINYINT#
    <isParameterPresent >
      <include refid="work_flow_build_history.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
</sqlMap>
