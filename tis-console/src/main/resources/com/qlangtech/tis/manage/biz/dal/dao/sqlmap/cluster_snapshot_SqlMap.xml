<?xml version="1.0" encoding="UTF-8" ?>
<!--~
  ~   Licensed to the Apache Software Foundation (ASF) under one
  ~   or more contributor license agreements.  See the NOTICE file
  ~   distributed with this work for additional information
  ~   regarding copyright ownership.  The ASF licenses this file
  ~   to you under the Apache License, Version 2.0 (the
  ~   "License"); you may not use this file except in compliance
  ~   with the License.  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  -->

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="cluster_snapshot">
  <resultMap id="ibatorgenerated_BaseResultMap"
             class="com.qlangtech.tis.manage.biz.dal.pojo.ClusterSnapshot">
    <result column="to_time" property="toTime" jdbcType="TIMESTAMP" />
    <result column="from_time" property="fromTime" jdbcType="TIMESTAMP" />
    <result column="request_count" property="requestCount"
            jdbcType="INTEGER" />
    <result column="update_count" property="updateCount" jdbcType="INTEGER" />
  </resultMap>

  <sql id="ibatorgenerated_Example_Where_Clause">
    <iterate property="oredCriteria" conjunction="or" prepend="where"
             removeFirstPrepend="iterate">
      <isEqual property="oredCriteria[].valid" compareValue="true">
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue"
                 conjunction="and">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue"
                 conjunction="and">
          $oredCriteria[].criteriaWithSingleValue[].condition$
          #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue"
                 conjunction="and">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values"
                   open="(" close=")" conjunction=",">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue"
                 conjunction="and">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>


  <!-- 最近1小时的访问 -->
  <select id="clusterReportlast1Hour"
          parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.ClusterSnapshotQuery"
          resultMap="ibatorgenerated_BaseResultMap">
    <![CDATA[

SELECT rr.from_time as from_time,rr.to_time as to_time,
     sum( if( sn.data_type='query' ,sn.incr_number,0 ))  as request_count
   , sum( if( sn.data_type='update',sn.incr_number,0 ))  as update_count
  FROM
(
  select  nums.a,@a as from_time ,@a:= date_add( @a,interval 5 minute ) as to_time
    from nums,(select @a:= #fromTime#) a where @a < #toTime#
)rr LEFT OUTER JOIN cluster_snapshot sn
      ON (sn.gmt_create <= rr.to_time  and sn.gmt_create > rr.from_time and sn.app_id=#appId#)
GROUP BY rr.a,rr.from_time,rr.to_time

    ]]>
    </select>


  <!-- 当天访问量 -->
  <select id="clusterReportCurrentDay"
          parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.ClusterSnapshotQuery"
          resultMap="ibatorgenerated_BaseResultMap">
	<![CDATA[
SELECT rr.from_time as from_time,rr.to_time as to_time,
     sum( if( sn.data_type='query' ,sn.incr_number,0 )) as request_count
   , sum( if( sn.data_type='update',sn.incr_number,0 ))  as update_count
  FROM
(
  select  nums.a,@a as from_time ,@a:= date_add( @a,interval 30 minute ) as to_time
    from nums,(select @a:= #fromTime#) a where @a < #toTime#
)rr LEFT OUTER JOIN cluster_snapshot sn
      ON (sn.gmt_create <= rr.to_time  and sn.gmt_create > rr.from_time and sn.app_id=#appId#)
GROUP BY rr.a,rr.from_time,rr.to_time
  	]]>
	</select>


  <!-- 最近5小时访问分布 -->
  <select id="clusterReportLast5hours"
          parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.ClusterSnapshotQuery"
          resultMap="ibatorgenerated_BaseResultMap">
	<![CDATA[
SELECT rr.from_time as from_time,rr.to_time as to_time,
     sum( if( sn.data_type='query' ,sn.incr_number,0 )) as request_count
   , sum( if( sn.data_type='update',sn.incr_number,0 ))  as update_count
  FROM
(
  select  nums.a,@a as from_time ,@a:= date_add( @a,interval 10 minute ) as to_time
    from nums,(select @a:=#fromTime#) a where @a < #toTime#
)rr LEFT OUTER JOIN cluster_snapshot sn
      ON (sn.gmt_create <= rr.to_time  and sn.gmt_create > rr.from_time and sn.app_id=#appId#)
GROUP BY rr.a,rr.from_time,rr.to_time

  	]]>
	</select>

  <!-- 最近15天的访问分布 -->
  <select id="clusterReportLast15day"
          parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.ClusterSnapshotQuery"
          resultMap="ibatorgenerated_BaseResultMap">
    <![CDATA[
SELECT rr.from_time as from_time,rr.to_time as to_time,
     sum( if( sn.data_type='query' ,sn.incr_number,0 )) as request_count
   , sum( if( sn.data_type='update',sn.incr_number,0 ))  as update_count
  FROM
(
  select  nums.a,@a as from_time ,@a:= date_add( @a,interval 1 day ) as to_time
    from nums,(select @a:= #fromTime# ) a where @a < #toTime#
)rr LEFT OUTER JOIN cluster_snapshot_pre_day sn
      ON (sn.gmt_create <= rr.to_time  and sn.gmt_create > rr.from_time and sn.app_id=#appId#)
GROUP BY rr.a,rr.from_time,rr.to_time

    ]]>
    </select>

  <!-- 最近30天的访问分布 -->
  <select id="clusterReportLast1month"
          parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.ClusterSnapshotQuery"
          resultMap="ibatorgenerated_BaseResultMap">
    <![CDATA[
SELECT rr.from_time as from_time,rr.to_time as to_time,
     sum( if( sn.data_type='query' ,sn.incr_number,0 )) as request_count
   , sum( if( sn.data_type='update',sn.incr_number,0 ))  as update_count
  FROM
(
  select  nums.a,@a as from_time ,@a:= date_add( @a,interval  1 day ) as to_time
    from nums,(select @a:= #fromTime#) a where @a < #toTime#
)rr LEFT OUTER JOIN cluster_snapshot_pre_day sn
      ON (sn.gmt_create <= rr.to_time  and sn.gmt_create > rr.from_time and sn.app_id=#appId#)
GROUP BY rr.a,rr.from_time,rr.to_time

    ]]>
    </select>



  <!-- 最近5天访问分布
  <select id="clusterReportLast5day"
    parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.ClusterSnapshotQuery"
    resultMap="ibatorgenerated_BaseResultMap">
  <![CDATA[
SELECT rr.from_time as gmt_modified,rr.to_time as gmt_create,
   ifnull(sum(sn.request_count) ,0) request_count
   , '' as service_name
   , 0 as id
   , 0 as qps
   , 0 as avg_consume_time_per_request
   , 0  doc_number
  FROM
(
  select  nums.a,@a as from_time ,@a:= date_add( @a,interval 60 minute ) as to_time
    from nums,(select @a:=date_add( date(CURRENT_TIMESTAMP),interval -4 day ) f) a where @a < date_add( date(CURRENT_TIMESTAMP),interval 1 day )
)rr left outer join cluster_snapshot sn
                        on (sn.gmt_create <= rr.to_time  and sn.gmt_create > rr.from_time and sn.service_name=#appName#)
GROUP BY rr.a
    ]]>
  </select>
-->
  <!-- 最近1个月
  <select id="clusterReportLast1Month"
    parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.ClusterSnapshotQuery"
    resultMap="ibatorgenerated_BaseResultMap">
  <![CDATA[
SELECT rr.from_time as gmt_modified,rr.to_time as gmt_create,
   ifnull(sum(sn.request_count) ,0) request_count
   , '' as service_name
   , 0 as id
   , 0 as qps
   , 0 as avg_consume_time_per_request
   , 0  doc_number
  FROM
(
  select  nums.a,@a as from_time ,@a:= date_add( @a,interval 1 day ) as to_time
    from nums,(select @a:=date_add( date(CURRENT_TIMESTAMP),interval -30 day ) f) a where @a < date_add( date(CURRENT_TIMESTAMP),interval 1 day )
)rr left outer join cluster_snapshot sn
                        on (sn.gmt_create <= rr.to_time  and sn.gmt_create > rr.from_time and sn.service_name=#appName#)
GROUP BY rr.a
    ]]>
  </select>

-->



</sqlMap>
