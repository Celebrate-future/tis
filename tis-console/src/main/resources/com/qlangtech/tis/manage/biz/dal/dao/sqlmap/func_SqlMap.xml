<?xml version="1.0" encoding="UTF-8" ?>
<!--~
  ~   Licensed to the Apache Software Foundation (ASF) under one
  ~   or more contributor license agreements.  See the NOTICE file
  ~   distributed with this work for additional information
  ~   regarding copyright ownership.  The ASF licenses this file
  ~   to you under the Apache License, Version 2.0 (the
  ~   "License"); you may not use this file except in compliance
  ~   with the License.  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  -->

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="func" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.qlangtech.tis.manage.biz.dal.pojo.Func" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    <result column="fun_id" property="funId" jdbcType="INTEGER" />
    <result column="fun_key" property="funKey" jdbcType="VARCHAR" />
    <result column="func_name" property="funcName" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="func_group_key" property="funcGroupKey" jdbcType="INTEGER" />
    <result column="func_group_name" property="funcGroupName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.FuncCriteria" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    select aa.fun_id, fun_key, func_name, gmt_create, gmt_modified, func_group_key, func_group_name
     from ( select fun_id from func
    <isParameterPresent >
      <include refid="func.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
      $paginationScript$
    </isParameterPresent>
       ) bb inner join func aa on aa.fun_id=bb.fun_id
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.Func" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    select fun_id, fun_key, func_name, gmt_create, gmt_modified, func_group_key, func_group_name
    from func
    where fun_id = #funId:INTEGER#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.Func" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    delete from func
    where fun_id = #funId:INTEGER#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.FuncCriteria" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    delete from func
    <include refid="func.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.Func" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    insert into func (fun_id, fun_key, func_name, gmt_create, gmt_modified, func_group_key,
      func_group_name)
    values (#funId:INTEGER#, #funKey:VARCHAR#, #funcName:VARCHAR#, #gmtCreate:TIMESTAMP#,
      #gmtModified:TIMESTAMP#, #funcGroupKey:INTEGER#, #funcGroupName:VARCHAR#)

  </insert>
  <insert id="ibatorgenerated_insertSelective" parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.Func" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    insert into func
    <dynamic prepend="(" >
      <isNotNull prepend="," property="funId" >
        fun_id
      </isNotNull>
      <isNotNull prepend="," property="funKey" >
        fun_key
      </isNotNull>
      <isNotNull prepend="," property="funcName" >
        func_name
      </isNotNull>
      <isNotNull prepend="," property="gmtCreate" >
        gmt_create
      </isNotNull>
      <isNotNull prepend="," property="gmtModified" >
        gmt_modified
      </isNotNull>
      <isNotNull prepend="," property="funcGroupKey" >
        func_group_key
      </isNotNull>
      <isNotNull prepend="," property="funcGroupName" >
        func_group_name
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="funId" >
        #funId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="funKey" >
        #funKey:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="funcName" >
        #funcName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="gmtCreate" >
        #gmtCreate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="gmtModified" >
        #gmtModified:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="funcGroupKey" >
        #funcGroupKey:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="funcGroupName" >
        #funcGroupName:VARCHAR#
      </isNotNull>
      )
    </dynamic>

  </insert>
  <select id="ibatorgenerated_countByExample" parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.FuncCriteria" resultClass="java.lang.Integer" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    select count(*) from func
    <include refid="func.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    update func
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.funId" >
        fun_id = #record.funId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.funKey" >
        fun_key = #record.funKey:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.funcName" >
        func_name = #record.funcName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.gmtCreate" >
        gmt_create = #record.gmtCreate:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.gmtModified" >
        gmt_modified = #record.gmtModified:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.funcGroupKey" >
        func_group_key = #record.funcGroupKey:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.funcGroupName" >
        func_group_name = #record.funcGroupName:VARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="func.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    <!--
      WARNING - if you hava any question please contact to baisui(baisui@qlangtech.com)
    -->
    update func
    set fun_id = #record.funId:INTEGER#,
      fun_key = #record.funKey:VARCHAR#,
      func_name = #record.funcName:VARCHAR#,
      gmt_create = #record.gmtCreate:TIMESTAMP#,
      gmt_modified = #record.gmtModified:TIMESTAMP#,
      func_group_key = #record.funcGroupKey:INTEGER#,
      func_group_name = #record.funcGroupName:VARCHAR#
    <isParameterPresent >
      <include refid="func.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
</sqlMap>
