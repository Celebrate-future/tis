<?xml version="1.0" encoding="UTF-8" ?>
<!--~
  ~   Licensed to the Apache Software Foundation (ASF) under one
  ~   or more contributor license agreements.  See the NOTICE file
  ~   distributed with this work for additional information
  ~   regarding copyright ownership.  The ASF licenses this file
  ~   to you under the Apache License, Version 2.0 (the
  ~   "License"); you may not use this file except in compliance
  ~   with the License.  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  -->

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="func_role_relation">
	<resultMap id="ibatorgenerated_BaseResultMap"
		class="com.qlangtech.tis.manage.biz.dal.pojo.FuncRoleRelation">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="r_id" property="rId" jdbcType="INTEGER" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="func_id" property="funcId" jdbcType="INTEGER" />
		<result column="func_key" property="funcKey" jdbcType="VARCHAR" />
		<result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
		<result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
		<result column="func_name" property="funcName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="ibatorgenerated_Example_Where_Clause">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		<iterate property="oredCriteria" conjunction="or" prepend="where"
			removeFirstPrepend="iterate">
			<isEqual property="oredCriteria[].valid" compareValue="true">
				(
				<iterate prepend="and" property="oredCriteria[].criteriaWithoutValue"
					conjunction="and">
					$oredCriteria[].criteriaWithoutValue[]$
        </iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue"
					conjunction="and">
					$oredCriteria[].criteriaWithSingleValue[].condition$
					#oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithListValue"
					conjunction="and">
					$oredCriteria[].criteriaWithListValue[].condition$
					<iterate property="oredCriteria[].criteriaWithListValue[].values"
						open="(" close=")" conjunction=",">
						#oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
				</iterate>
				<iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue"
					conjunction="and">
					$oredCriteria[].criteriaWithBetweenValue[].condition$
					#oredCriteria[].criteriaWithBetweenValue[].values[0]# and
					#oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
				)
			</isEqual>
		</iterate>
	</sql>




	<select id="ibatorgenerated_select_func_key_ByUsrid" resultClass="string"
		parameterClass="string">
		select rr.func_key from usr_dpt_relation usr inner join
		func_role_relation rr on usr.r_id = rr.r_id where usr.usr_id = #value#
   </select>

	<select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap"
		parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.FuncRoleRelationCriteria">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		select aa.id, r_id, role_name, func_id, func_key, gmt_create,
		gmt_modified, func_name
		from ( select id from func_role_relation
		<isParameterPresent>
			<include refid="func_role_relation.ibatorgenerated_Example_Where_Clause" />
			<isNotNull property="orderByClause">
				order by $orderByClause$
      </isNotNull>
			$paginationScript$
		</isParameterPresent>
		) bb inner join func_role_relation aa on aa.id=bb.id
	</select>
	<select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap"
		parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.FuncRoleRelation">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		select id, r_id, role_name, func_id, func_key, gmt_create,
		gmt_modified, func_name
		from func_role_relation
		where id = #id:INTEGER#
	</select>
	<delete id="ibatorgenerated_deleteByPrimaryKey"
		parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.FuncRoleRelation">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		delete from func_role_relation
		where id = #id:INTEGER#
	</delete>
	<delete id="ibatorgenerated_deleteByExample"
		parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.FuncRoleRelationCriteria">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		delete from func_role_relation
		<include refid="func_role_relation.ibatorgenerated_Example_Where_Clause" />
	</delete>
	<insert id="ibatorgenerated_insert"
		parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.FuncRoleRelation">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		insert into func_role_relation (id, r_id, role_name, func_id,
		func_key, gmt_create,
		gmt_modified, func_name)
		values (#id:INTEGER#, #rId:INTEGER#, #roleName:VARCHAR#, #funcId:INTEGER#,
		#funcKey:VARCHAR#,
		#gmtCreate:TIMESTAMP#, #gmtModified:TIMESTAMP#, #funcName:VARCHAR#)
	</insert>
	<insert id="ibatorgenerated_insertSelective"
		parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.FuncRoleRelation">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		insert into func_role_relation
		<dynamic prepend="(">
			<isNotNull prepend="," property="id">
				id
      </isNotNull>
			<isNotNull prepend="," property="rId">
				r_id
      </isNotNull>
			<isNotNull prepend="," property="roleName">
				role_name
      </isNotNull>
			<isNotNull prepend="," property="funcId">
				func_id
      </isNotNull>
			<isNotNull prepend="," property="funcKey">
				func_key
      </isNotNull>
			<isNotNull prepend="," property="gmtCreate">
				gmt_create
      </isNotNull>
			<isNotNull prepend="," property="gmtModified">
				gmt_modified
      </isNotNull>
			<isNotNull prepend="," property="funcName">
				func_name
      </isNotNull>
			)
		</dynamic>
		values
		<dynamic prepend="(">
			<isNotNull prepend="," property="id">
				#id:INTEGER#
      </isNotNull>
			<isNotNull prepend="," property="rId">
				#rId:INTEGER#
      </isNotNull>
			<isNotNull prepend="," property="roleName">
				#roleName:VARCHAR#
      </isNotNull>
			<isNotNull prepend="," property="funcId">
				#funcId:INTEGER#
      </isNotNull>
			<isNotNull prepend="," property="funcKey">
				#funcKey:VARCHAR#
      </isNotNull>
			<isNotNull prepend="," property="gmtCreate">
				#gmtCreate:TIMESTAMP#
      </isNotNull>
			<isNotNull prepend="," property="gmtModified">
				#gmtModified:TIMESTAMP#
      </isNotNull>
			<isNotNull prepend="," property="funcName">
				#funcName:VARCHAR#
      </isNotNull>
			)
		</dynamic>
	</insert>
	<select id="ibatorgenerated_countByExample"
		parameterClass="com.qlangtech.tis.manage.biz.dal.pojo.FuncRoleRelationCriteria"
		resultClass="java.lang.Integer">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		select count(*) from func_role_relation
		<include refid="func_role_relation.ibatorgenerated_Example_Where_Clause" />
	</select>
	<update id="ibatorgenerated_updateByExampleSelective">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		update func_role_relation
		<dynamic prepend="set">
			<isNotNull prepend="," property="record.id">
				id = #record.id:INTEGER#
      </isNotNull>
			<isNotNull prepend="," property="record.rId">
				r_id = #record.rId:INTEGER#
      </isNotNull>
			<isNotNull prepend="," property="record.roleName">
				role_name = #record.roleName:VARCHAR#
      </isNotNull>
			<isNotNull prepend="," property="record.funcId">
				func_id = #record.funcId:INTEGER#
      </isNotNull>
			<isNotNull prepend="," property="record.funcKey">
				func_key = #record.funcKey:VARCHAR#
      </isNotNull>
			<isNotNull prepend="," property="record.gmtCreate">
				gmt_create = #record.gmtCreate:TIMESTAMP#
      </isNotNull>
			<isNotNull prepend="," property="record.gmtModified">
				gmt_modified = #record.gmtModified:TIMESTAMP#
      </isNotNull>
			<isNotNull prepend="," property="record.funcName">
				func_name = #record.funcName:VARCHAR#
      </isNotNull>
		</dynamic>
		<isParameterPresent>
			<include refid="func_role_relation.ibatorgenerated_Example_Where_Clause" />
		</isParameterPresent>
	</update>
	<update id="ibatorgenerated_updateByExample">
		<!--
			WARNING - if you hava any question please contact to
			baisui(baisui@qlangtech.com)
		-->
		update func_role_relation
		set id = #record.id:INTEGER#,
		r_id = #record.rId:INTEGER#,
		role_name = #record.roleName:VARCHAR#,
		func_id = #record.funcId:INTEGER#,
		func_key = #record.funcKey:VARCHAR#,
		gmt_create = #record.gmtCreate:TIMESTAMP#,
		gmt_modified = #record.gmtModified:TIMESTAMP#,
		func_name = #record.funcName:VARCHAR#
		<isParameterPresent>
			<include refid="func_role_relation.ibatorgenerated_Example_Where_Clause" />
		</isParameterPresent>
	</update>
</sqlMap>
