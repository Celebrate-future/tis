package com.qlangtech.tis.realtime.transfer.${config.collection}

import java.util
import org.apache.flink.streaming.api.functions.sink.{PrintSinkFunction, SinkFunction}
import com.qlangtech.tis.realtime.{HoodieFlinkSourceHandle}
import scala.collection.JavaConverters._
import java.util.concurrent.Callable



class ${config.javaName}SourceHandle extends HoodieFlinkSourceHandle {

override protected def createTabStreamerCfg(): java.util.Map[String,Callable[Object]] = {
 import org.apache.hudi.streamer.FlinkStreamerConfig
 import org.apache.hudi.common.model.WriteOperationType

 var cfgs: Map[String , Callable[Object]] = Map()
 var cfg: FlinkStreamerConfig = null


 implicit def strToOperationType(v: String) : WriteOperationType = {
   WriteOperationType.fromValue(v)
 }
 implicit def cfgToCallable(v: FlinkStreamerConfig) : Callable[Object] = {
  new Callable[Object]{ override def call(): Object = { v }}
 }

#foreach($i in $config.dumpTables  )
  cfg = new FlinkStreamerConfig()
  ${config.getFlinkStreamerConfig($i.tabName)}
  cfgs += ("${i.tabName}" -> cfg )

#end

  cfgs.asJava
}



}
